load("@bazel_skylib//lib:paths.bzl", "paths")

cc_library(
    name = "screen_api",
    strip_include_prefix = "include",
    hdrs = glob(["include/ftxui/screen/*.hpp"]), 
)

cc_library(
    name = "util_api",
    strip_include_prefix = "include",
    hdrs = glob(["include/ftxui/util/*.hpp"]), 
    deps = [":screen_api"],
)

cc_library(
    name = "dom_api",
    strip_include_prefix = "include",
    hdrs = glob(["include/ftxui/dom/*.hpp"]), 
    deps = [":screen_api", ":util_api"],
)

cc_library(
    name = "component_api",
    strip_include_prefix = "include",
    hdrs = glob(["include/ftxui/component/*.hpp"]), 
    deps = [":dom_api", ":screen_api", ":util_api"],
)

cc_library(
    name = "screen_lib",
    strip_include_prefix = "src",
    hdrs = glob(["src/ftxui/screen/*.hpp"]),
    srcs = glob(["src/ftxui/screen/*.cpp", ], exclude=["src/ftxui/screen/*_test.cpp"]), 
    deps = [":screen_api", ":util_api"],
)

cc_library(
    name = "dom_lib",
    strip_include_prefix = "src",
    hdrs = glob(["src/ftxui/dom/*.hpp"]),
    srcs = glob(["src/ftxui/dom/*.cpp"], exclude=["src/ftxui/dom/*_test.cpp"]), 
    deps = [":dom_api"],
)

cc_test(
    name = "dom_benchmarks",
    srcs = ["src/ftxui/dom/benchmark_test.cpp"],
    deps = [":dom_lib", ":screen_lib", "@google_benchmark//:benchmark_main"],
    # This benchmark is too slow for regular runs, hence marked as manual.
    # https://bazel.build/reference/test-encyclopedia#tag-conventions
    # manual -> don't include test target in wildcard target patterns like :..., :*, or :all
    tags = ["manual"],
)

cc_test(
    name = "dom_tests",
    srcs = glob(["src/ftxui/dom/*_test.cpp"], exclude=["src/ftxui/dom/benchmark_test.cpp"]),
    deps = [":dom_lib", ":screen_lib", "@googletest//:gtest_main"],
)

cc_library(
    name = "component_lib",
    strip_include_prefix = "src",
    hdrs = glob(["src/ftxui/component/*.hpp"]),
    srcs = glob(["src/ftxui/component/*.cpp"], exclude=["src/ftxui/component/*_test.cpp", "src/ftxui/component/*_fuzzer.cpp"]), 
    deps = [":component_api", ":dom_lib", ":screen_lib"],
)

cc_test(
    name = "component_tests",
    srcs = glob(["src/ftxui/component/*_test.cpp"], exclude=["src/ftxui/dom/terminal_input_parser_test_fuzzer.cpp"]),
    deps = [":component_lib", ":dom_lib", ":screen_lib", "@googletest//:gtest_main"],
)

[cc_binary(
    name = "dom_" + paths.basename(name) + "_example",
    srcs = [name, "examples/dom/color_info_sorted_2d.ipp"],
    deps = [":dom_lib", ":screen_lib"],
) for (name) in glob(["examples/dom/*.cpp"])]

X = glob(["examples/dom/**/*"])

[cc_binary(
    name = "component_" + paths.basename(name) + "_example",
    srcs = [name, "examples/dom/color_info_sorted_2d.ipp"],
    deps = [":component_lib", ":dom_lib", ":screen_lib"],
) for (name) in glob(["examples/component/*.cpp"])]

# LLVM's clang-cl support
platform(
    name = "x64_windows-clang-cl",
    constraint_values = [
        "@platforms//cpu:x86_64",
        "@platforms//os:windows",
        "@bazel_tools//tools/cpp:clang-cl",
    ],
)
